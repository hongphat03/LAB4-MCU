/*
 * scheduler.h
 *
 *  Created on: Nov 29, 2022
 *      Author: Hong Phat
 */

#ifndef INC_SCHEDULER_H_
#define INC_SCHEDULER_H_

#include <stdint.h>

 typedef struct {
 // Pointer to the task (must be a ’ void ( void ) ’ function )
 void ( * pTask ) ( void ) ;
 // Delay ( ticks ) until the function will ( next ) be run
 uint32_t Delay ;
 // Interval ( ticks) between subsequent runs .
 uint32_t Period ;
 // Incremented (by scheduler) when task i s due to execute
 uint8_t RunMe;
 uint32_t TaskID ;
 } sTask ;

#define SCH_MAX_TASKS 40

 void SCH_Init(void);
 void SCH_Update(void);
 void SCH_Dispatch_Tasks(void);
 unsigned char SCH_Add_Task(void(*pFunction)(), unsigned int DELAY, unsigned int PERIOD);
 unsigned char SCH_Delete_Task(uint32_t TASK_INDEX);
 void SCH_Go_To_Sleep(void);


#endif /* INC_SCHEDULER_H_ */
